//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using DevExpress.Xpo;
using DevExpress.Xpo.Metadata;
using DevExpress.Data.Filtering;
using System.Collections.Generic;
using System.ComponentModel;
using System.Reflection;
using DevExpress.Persistent.Base;

namespace BimLookup.Module.BusinessObjects.DBViews
{

    [DefaultClassOptions, ImageName("BO_Contact")]
    public partial class MasterkravProjectView : XPLiteObject
    {
        long fTempKey;
        [Key]
        public long TempKey
        {
            get { return fTempKey; }
            set { SetPropertyValue<long>(nameof(TempKey), ref fTempKey, value); }
        }
        Guid fID_PropertyInstance;
        public Guid ID_PropertyInstance
        {
            get { return fID_PropertyInstance; }
            set { SetPropertyValue<Guid>(nameof(ID_PropertyInstance), ref fID_PropertyInstance, value); }
        }
        string fProjectComment;
        public string ProjectComment
        {
            get { return fProjectComment; }
            set { SetPropertyValue<string>(nameof(ProjectComment), ref fProjectComment, value); }
        }
        DateTime fCreated;
        public DateTime Created
        {
            get { return fCreated; }
            set { SetPropertyValue<DateTime>(nameof(Created), ref fCreated, value); }
        }
        string fComment;
        public string Comment
        {
            get { return fComment; }
            set { SetPropertyValue<string>(nameof(Comment), ref fComment, value); }
        }
        string fDescription;
        public string Description
        {
            get { return fDescription; }
            set { SetPropertyValue<string>(nameof(Description), ref fDescription, value); }
        }
        Guid fID_Property;
        public Guid ID_Property
        {
            get { return fID_Property; }
            set { SetPropertyValue<Guid>(nameof(ID_Property), ref fID_Property, value); }
        }
        Guid fID_RevitCategory;
        public Guid ID_RevitCategory
        {
            get { return fID_RevitCategory; }
            set { SetPropertyValue<Guid>(nameof(ID_RevitCategory), ref fID_RevitCategory, value); }
        }
        string fRevitCategory;
        public string RevitCategory
        {
            get { return fRevitCategory; }
            set { SetPropertyValue<string>(nameof(RevitCategory), ref fRevitCategory, value); }
        }
        string fIfcCategory;
        public string IfcCategory
        {
            get { return fIfcCategory; }
            set { SetPropertyValue<string>(nameof(IfcCategory), ref fIfcCategory, value); }
        }
        Guid fID_PSet;
        public Guid ID_PSet
        {
            get { return fID_PSet; }
            set { SetPropertyValue<Guid>(nameof(ID_PSet), ref fID_PSet, value); }
        }
        string fProjectCode;
        public string ProjectCode
        {
            get { return fProjectCode; }
            set { SetPropertyValue<string>(nameof(ProjectCode), ref fProjectCode, value); }
        }
        string fDicsiplineCode;
        public string DicsiplineCode
        {
            get { return fDicsiplineCode; }
            set { SetPropertyValue<string>(nameof(DicsiplineCode), ref fDicsiplineCode, value); }
        }
        string fPSetName;
        public string PSetName
        {
            get { return fPSetName; }
            set { SetPropertyValue<string>(nameof(PSetName), ref fPSetName, value); }
        }
        string fPropertyName;
        public string PropertyName
        {
            get { return fPropertyName; }
            set { SetPropertyValue<string>(nameof(PropertyName), ref fPropertyName, value); }
        }
        int fTypeInstance;
        public int TypeInstance
        {
            get { return fTypeInstance; }
            set { SetPropertyValue<int>(nameof(TypeInstance), ref fTypeInstance, value); }
        }
        string fIfcPropertyType;
        public string IfcPropertyType
        {
            get { return fIfcPropertyType; }
            set { SetPropertyValue<string>(nameof(IfcPropertyType), ref fIfcPropertyType, value); }
        }
        string fRevitPropertyType;
        public string RevitPropertyType
        {
            get { return fRevitPropertyType; }
            set { SetPropertyValue<string>(nameof(RevitPropertyType), ref fRevitPropertyType, value); }
        }
        string fPropertyGroup;
        public string PropertyGroup
        {
            get { return fPropertyGroup; }
            set { SetPropertyValue<string>(nameof(PropertyGroup), ref fPropertyGroup, value); }
        }
        string fRevitElement;
        public string RevitElement
        {
            get { return fRevitElement; }
            set { SetPropertyValue<string>(nameof(RevitElement), ref fRevitElement, value); }
        }
        string fPropertyGuid;
        public string PropertyGuid
        {
            get { return fPropertyGuid; }
            set { SetPropertyValue<string>(nameof(PropertyGuid), ref fPropertyGuid, value); }
        }
        bool fSkisseprosjekt;
        public bool Skisseprosjekt
        {
            get { return fSkisseprosjekt; }
            set { SetPropertyValue<bool>(nameof(Skisseprosjekt), ref fSkisseprosjekt, value); }
        }
        bool fForprosjekt;
        public bool Forprosjekt
        {
            get { return fForprosjekt; }
            set { SetPropertyValue<bool>(nameof(Forprosjekt), ref fForprosjekt, value); }
        }
        bool fDetaljprosjekt;
        public bool Detaljprosjekt
        {
            get { return fDetaljprosjekt; }
            set { SetPropertyValue<bool>(nameof(Detaljprosjekt), ref fDetaljprosjekt, value); }
        }
        bool fArbeidstegning;
        public bool Arbeidstegning
        {
            get { return fArbeidstegning; }
            set { SetPropertyValue<bool>(nameof(Arbeidstegning), ref fArbeidstegning, value); }
        }
        bool fOverlevering;
        public bool Overlevering
        {
            get { return fOverlevering; }
            set { SetPropertyValue<bool>(nameof(Overlevering), ref fOverlevering, value); }
        }
    }

}
